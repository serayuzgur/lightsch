<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" xmlns:sch="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">

	<ns prefix="gl-plt" uri="http://www.xbrl.org/int/gl/plt/2010-04-16" />
	<ns prefix="gl-cor" uri="http://www.xbrl.org/int/gl/cor/2006-10-25" />
	<ns prefix="gl-bus" uri="http://www.xbrl.org/int/gl/bus/2006-10-25" />
	<ns prefix="xbrli" uri="http://www.xbrl.org/2003/instance" />
	<ns prefix="ds" uri="http://www.w3.org/2000/09/xmldsig#" />
	<ns prefix="xades" uri="http://uri.etsi.org/01903/v1.3.2#" />
	<ns prefix="edefter" uri="http://www.edefter.gov.tr" />
	
	<title>Berat dokümanlarını kontrol etmek için gerekli olan schematron kuralları</title>

	<let name="periodCoveredStart" value="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries/gl-cor:documentInfo/gl-cor:periodCoveredStart"/>
	<let name="periodCoveredEnd" value="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries/gl-cor:documentInfo/gl-cor:periodCoveredEnd"/>
	<let name="vkn" value="/edefter:berat/xbrli:xbrl/xbrli:context/xbrli:entity/xbrli:identifier"/>
	
	<!-- Berat dokümanlarının ana(kök) elemanı <edefter:berat> olmalıdır. -->
	<pattern id="kok">
		<rule context="*">
			<assert test="not(@decimals) or  @decimals = 'INF'">Belge içerisindeki 'decimals' nitelikleri 'INF' değerini almalıdır.</assert>
		</rule>
		<rule context="/">
			<assert test="edefter:berat">Berat dokümanı edefter:berat ana elemanı ile başlamalıdır.</assert>
		</rule>
	</pattern>
	
	<!-- Berat dokümanlarının ana(kök) elemanı <edefter:berat> içerisinde imza <ds:Signature> elemanı bulunmalıdır.  -->
	<pattern id="defter">
		<rule context="/edefter:berat">
			<assert test="ds:SignatureValue">ds:SignatureValue zorunlu bir elemandır.</assert>
		</rule>
	</pattern>
	
	<!-- <ds:Signature kontrolleri -->
	<pattern id="signature">
		<rule context="/edefter:berat/ds:Signature">
			<let name="signatureMethodAlgorithm" value="ds:SignedInfo/ds:SignatureMethod/@Algorithm"/>
			<assert test="ds:SignatureValue/@Id">ds:SignatureValue elemanı Id niteliğine sahip olmalıdır.</assert>
			<assert test="ds:SignedInfo/ds:Reference/ds:Transforms">ds:SignedInfo/ds:Reference/ds:Transforms elemanı zorunlu bir elemandır.</assert>
			<assert test="ds:KeyInfo">ds:KeyInfo elemanı zorunlu bir elemandır.</assert>
			<assert test="not(ds:KeyInfo) or ds:KeyInfo/ds:KeyValue">ds:KeyInfo elemanı içerisindeki ds:KeyValue elemanı zorunlu bir elemandır.</assert>
			<assert test="not(ds:KeyInfo) or ds:KeyInfo/ds:X509Data">ds:KeyInfo elemanı içerisindeki ds:X509Data elemanı zorunlu bir elemandır.</assert>
			<assert test="ds:Object">ds:Object elemanı zorunlu bir elemandır.</assert>
			<assert test="not(ds:Object) or ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningTime">xades:SigningTime elemanı zorunlu bir elemandır.</assert>
			<assert test="not(ds:Object) or ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate">xades:SigningCertificate elemanı zorunlu bir elemandır</assert>
			<assert test="count(ds:SignedInfo/ds:Reference[@URI = '']) = 1 ">ds:SignedInfo elamanı içerisinde URI niteliği boşluğa("") eşit olan sadece bir tane ds:Reference elemanının bulunmaldır.</assert>
			<assert test="not(ends-with($signatureMethodAlgorithm,'sha1'))">İmzalama işleminde kullanılacak özet(hash) algoritması sha1 olmamalıdır.</assert>
		</rule>
		<rule context="/edefter:berat/ds:Signature/ds:KeyInfo/ds:X509Data">
			<assert test="ds:X509SubjectName">ds:X509Data elemanı içerisindeki ds:X509SubjectName elemanı zorunlu bir elemandır.</assert>
			<assert test="ds:X509Certificate">ds:X509Data elemanı içerisindeki ds:X509Certificate elemanı zorunlu bir elemandır.</assert>
		</rule>
		<rule context="/edefter:berat/ds:Signature/ds:KeyInfo/ds:X509Data/ds:X509SubjectName">
			<assert test="string-length(normalize-space(.)) != 0 "> ds:X509SubjectName elemanının değeri boşluk olmamalıdır.</assert>
		</rule>			
	</pattern>
	
	<!-- <xbrli:xbrl> elemanı bir <xbrli:context>, en az bir <xbrli:unit> ve bir <gl-cor:accountingEntries> elmanına sahip olmalıdır -->
	<pattern id="xbrl">
		<rule context="/edefter:berat/xbrli:xbrl">
			<assert test="count(xbrli:context) = 1 ">xbrli:context zorunlu bir elemandır.</assert>
			<assert test="count(xbrli:unit) >= 1 ">xbrli:unit zorunlu bir elemandır.</assert>
			<assert test="count(gl-cor:accountingEntries) = 1 ">gl-cor:accountingEntries zorunlu bir elemandır.</assert>
		</rule>
		<rule context="/edefter:berat/xbrli:xbrl/xbrli:context/xbrli:entity/xbrli:identifier">
			<assert test="matches(normalize-space(.) , '^[0-9]{10,11}$')">xbrli:identifier elemanına 10 haneli vergi kimlik numarası ve ya 11 haneli TC kimlik numarası yazılmalıdır.</assert>
		</rule>		
	</pattern>
	
	<!-- <gl-cor:accountingEntries> elemanı bir <gl-cor:documentInfo> elemanı ve bir <gl-cor:entityInformation> elemanı içermelidir.  -->
	<pattern id="accountingentries">
		<rule context="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries">
			<assert test="gl-cor:documentInfo">gl-cor:documentInfo zorunlu bir elemandır.</assert>
			<assert test="gl-cor:entityInformation">gl-cor:entityInformation zorunlu bir elemandır.</assert>
			<assert test="count(gl-cor:entryHeader) = 0">Berat dokümanlarında gl-cor:entryHeader elemanı bulunmamalıdır.</assert>
		</rule>		
	</pattern>
	
	<!--  <gl-cor:documentInfo> kontrolleri -->
	<pattern id="documentinfo">
		<rule context="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries/gl-cor:documentInfo">
			<assert test="gl-cor:entriesType">gl-cor:entriesType zorunlu bir elemandır.</assert>
			<assert test="normalize-space(gl-cor:entriesType) = 'journal' or normalize-space(gl-cor:entriesType) = 'ledger' ">gl-cor:entriesType elemanı yevmiye defteri beratı için 'journal', büyük defter beratı için 'ledger' değerini almalıdır.</assert>
			
			<assert test="gl-cor:uniqueID">gl-cor:uniqueID zorunlu bir elemandır.</assert>
			<assert test="not(gl-cor:uniqueID) or ( starts-with(normalize-space(gl-cor:uniqueID),'YEV') or starts-with(normalize-space(gl-cor:uniqueID),'KEB') )">gl-cor:uniqueID elemanı yevmiye defteri için 'YEV' değeri, büyük defter için 'KEB' değeri ile başlamalıdır.</assert>
			<assert test="not(gl-cor:uniqueID) or string-length(normalize-space(gl-cor:uniqueID)) = 11 or  string-length(normalize-space(gl-cor:uniqueID)) = 13">gl-cor:uniqueID elemanı 13 karakterden oluşmalıdır.</assert>
			
			<assert test="gl-cor:creationDate">gl-cor:creationDate zorunlu bir elemandır.</assert>
			
			<assert test="gl-cor:periodCoveredStart">gl-cor:periodCoveredStart zorunlu bir elemandır.</assert>
			<assert test="gl-cor:periodCoveredEnd">gl-cor:periodCoveredEnd zorunlu bir elemandır.</assert>
			<assert test="gl-cor:periodCoveredEnd >= gl-cor:periodCoveredStart">gl-cor:periodCoveredEnd elemanı gl-cor:periodCoveredStart elemanından büyük ve ya eşit olmalıdır. </assert>
			
			<assert test="gl-cor:creationDate >= gl-cor:periodCoveredEnd">gl-cor:creationDate elemanı gl-cor:periodCoveredEnd elemanından büyük ve ya eşit olmalıdır. </assert>
			
			<assert test="string-length(normalize-space(gl-bus:sourceApplication)) > 0">gl-bus:sourceApplication zorunlu bir elemandır ve değeri boşluk olmamalıdır.</assert>
		</rule>
	</pattern>
	
	<!-- <gl-cor:entityInformation> kontrolleri -->
	<pattern id="entityinformation">
		<rule context="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries/gl-cor:entityInformation">
			<assert test="gl-bus:entityPhoneNumber">gl-bus:entityPhoneNumber zorunlu bir elemandır.</assert>
						
			<assert test="gl-bus:entityEmailAddressStructure">gl-bus:entityEmailAddressStructure zorunlu bir elemandır.</assert>
						
			<assert test="count(gl-bus:organizationIdentifiers) >= 1">gl-bus:organizationIdentifiers zorunlu bir elemandır.</assert>
			<assert test="not(string-length($vkn) = 10) or count(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Kurum Unvanı']) = 1">gl-bus:organizationDescription değeri 'Kurum Unvanı' olan bir tane gl-bus:organizationIdentifiers elemanı bulunmalıdır.</assert>
			<assert test="not(string-length($vkn) = 11) or count(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Adı Soyadı']) = 1">gl-bus:organizationDescription değeri 'Adı Soyadı' olan bir tane gl-bus:organizationIdentifiers elemanı bulunmalıdır.</assert>
			
			<let name="countKurumUnvani" value="count(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Kurum Unvanı'])"/>
			<let name="countAdiSoyadi" value="count(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Adı Soyadı'])"/>
			
			<assert test="($countKurumUnvani=1 and not($countAdiSoyadi=1)) or ($countAdiSoyadi=1 and not($countKurumUnvani=1))">gl-bus:organizationDescription değeri 'Kurum Unvanı' veya 'Adı Soyadı' olan yalnızca bir tane gl-bus:organizationIdentifiers elemanı bulunmalıdır.</assert>
			
			<assert test="not(count(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Kurum Unvanı']) = 1) or 
				string-length(normalize-space(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Kurum Unvanı']/gl-bus:organizationIdentifier)) >=2">gl-bus:organizationDescription değeri 'Kurum Unvanı' olan gl-bus:organizationIdentifiers elemanının  gl-bus:organizationIdentifier eleman değeri en az iki karakter olmalıdır.</assert>
			<assert test="not(count(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Adı Soyadı']) = 1) or 
				string-length(normalize-space(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Adı Soyadı']/gl-bus:organizationIdentifier)) >=2">gl-bus:organizationDescription değeri 'Adı Soyadı' olan gl-bus:organizationIdentifiers elemanının  gl-bus:organizationIdentifier eleman değeri en az iki karakter olmalıdır.</assert>
			
			<let name="countSubeNo" value="count(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Şube No'])"/>
			
			<let name="countSubeAdi" value="count(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Şube Adı'])"/>
			
			<assert test="(not($countSubeNo = 1) or $countSubeAdi = 1) and (not($countSubeAdi = 1) or $countSubeNo = 1)">Şube no ve şube adı birlikte bulunmalıdır.</assert>
			
			<assert test="($countSubeNo &lt; 2) and ($countSubeAdi &lt; 2)">Şube no veya şube adı birden fazla olamaz.</assert>
			
			<!--<assert test="not($countSubeNo = 1) or matches(normalize-space(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Şube No']/gl-bus:organizationIdentifier) , '^[0-9]{4}$')">Şube no 4 haneli sayısal bir değer olmalıdır.</assert>-->
			
			<assert test="not($countSubeAdi = 1) or string-length(normalize-space(gl-bus:organizationIdentifiers[gl-bus:organizationDescription = 'Şube Adı']/gl-bus:organizationIdentifier)) >= 2">Şube adı değeri en az iki karakter olmalıdır.</assert>			
			
			<assert test="gl-bus:organizationAddress">gl-bus:organizationAddress zorunlu bir elemandır.</assert>
			
			<assert test="not(gl-bus:organizationAddress) or gl-bus:organizationAddress/gl-bus:organizationBuildingNumber">gl-bus:organizationAddress elemanı içerisindeki gl-bus:organizationBuildingNumber zorunlu bir elemandır.</assert>
			<assert test="not(gl-bus:organizationAddress) or gl-bus:organizationAddress/gl-bus:organizationAddressStreet">gl-bus:organizationAddress elemanı içerisindeki gl-bus:organizationAddressStreet zorunlu bir elemandır.</assert>
			<assert test="not(gl-bus:organizationAddress) or gl-bus:organizationAddress/gl-bus:organizationAddressCity">gl-bus:organizationAddress elemanı içerisindeki gl-bus:organizationAddressCity zorunlu bir elemandır.</assert>
			<assert test="not(gl-bus:organizationAddress) or gl-bus:organizationAddress/gl-bus:organizationAddressZipOrPostalCode">gl-bus:organizationAddress' elemanı içerisindeki 'gl-bus:organizationAddressZipOrPostalCode zorunlu bir elemandır.</assert>
			<assert test="not(gl-bus:organizationAddress) or gl-bus:organizationAddress/gl-bus:organizationAddressCountry">gl-bus:organizationAddress elemanı içerisindeki gl-bus:organizationAddressCountry zorunlu bir elemandır.</assert>

			<assert test="gl-bus:entityWebSite">gl-bus:entityWebSite zorunlu bir elemandır.</assert>
						
			<assert test="string-length(normalize-space(gl-bus:businessDescription)) > 0">gl-bus:businessDescription zorunlu bir elemandır ve değeri boşluk olmamalıdır.</assert>
			
			<assert test="gl-bus:fiscalYearStart">gl-bus:fiscalYearStart zorunlu bir elemandır.</assert>			
			<assert test="gl-bus:fiscalYearEnd">gl-bus:fiscalYearEnd zorunlu bir elemandır.</assert>
			<assert test="gl-bus:fiscalYearEnd > gl-bus:fiscalYearStart">gl-bus:fiscalYearEnd elemanı gl-bus:fiscalYearStart elemanından büyük olmalıdır.</assert>
			
			<assert test="gl-bus:accountantInformation">gl-bus:accountantInformation zorunlu bir elemandır.</assert>
		</rule>
		<rule context="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries/gl-cor:entityInformation/gl-bus:accountantInformation">
			<assert test="string-length(normalize-space(gl-bus:accountantName)) > 0">gl-bus:accountantInformation elemanı içerisindeki gl-bus:accountantName zorunlu bir elemandır ve değeri boşluk olmamalıdır.</assert>
			<assert test="string-length(normalize-space(gl-bus:accountantEngagementTypeDescription)) > 0">gl-bus:accountantInformation elemanı içerisindeki gl-bus:accountantEngagementTypeDescription zorunlu bir elemandır  ve değeri boşluk olmamalıdır.</assert>
		</rule>
		<rule context="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries/gl-cor:entityInformation/gl-bus:entityPhoneNumber">
			<assert test="string-length(normalize-space(gl-bus:phoneNumber)) > 0">gl-bus:phoneNumber zorunlu bir elemandır ve değeri boşluk olmamalıdır.</assert>			
		</rule>
		<rule context="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries/gl-cor:entityInformation/gl-bus:entityEmailAddressStructure">
			<assert test="string-length(normalize-space(gl-bus:entityEmailAddress)) > 0">gl-bus:entityEmailAddressStructure elemanı içerisinde gl-bus:entityEmailAddress zorunlu bir elemandır ve  ve değeri boşluk olmamalıdır.</assert>		
		</rule>
		<rule context="/edefter:berat/xbrli:xbrl/gl-cor:accountingEntries/gl-cor:entityInformation/gl-bus:entityWebSite">
			<assert test="gl-bus:webSiteURL">gl-bus:entityWebSite elemanı içerisindeki gl-bus:webSiteURL zorunlu bir elemandır.</assert>
		</rule>		
	</pattern>

</schema>

